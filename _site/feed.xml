<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="ko"><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" hreflang="ko" /><updated>2021-01-07T14:10:52+09:00</updated><id>/feed.xml</id><title type="html">Corner</title><entry><title type="html">오라클Oracle - SQL : 제약 조건</title><link href="/database/2021/01/07/oracle-%EC%A0%9C%EC%95%BD%EC%A1%B0%EA%B1%B4.html" rel="alternate" type="text/html" title="오라클Oracle - SQL : 제약 조건" /><published>2021-01-07T14:00:00+09:00</published><updated>2021-01-07T14:00:00+09:00</updated><id>/database/2021/01/07/oracle-%EC%A0%9C%EC%95%BD%EC%A1%B0%EA%B1%B4</id><content type="html" xml:base="/database/2021/01/07/oracle-%EC%A0%9C%EC%95%BD%EC%A1%B0%EA%B1%B4.html">&lt;h1 id=&quot;제약-조건에-관하여&quot;&gt;&lt;a href=&quot;https://iu-corner.tistory.com/entry/Oracle-SQL-제약조건?category=905491&quot;&gt;제약 조건에 관하여&lt;/a&gt;&lt;/h1&gt;</content><author><name></name></author><category term="Database" /><summary type="html">제약 조건에 관하여</summary></entry><entry><title type="html">오라클Oracle - SQL : 서브 쿼리(Sub Query)</title><link href="/database/2021/01/07/oracle-%EC%84%9C%EB%B8%8C%EC%BF%BC%EB%A6%AC.html" rel="alternate" type="text/html" title="오라클Oracle - SQL : 서브 쿼리(Sub Query)" /><published>2021-01-07T14:00:00+09:00</published><updated>2021-01-07T14:00:00+09:00</updated><id>/database/2021/01/07/oracle-%EC%84%9C%EB%B8%8C%EC%BF%BC%EB%A6%AC</id><content type="html" xml:base="/database/2021/01/07/oracle-%EC%84%9C%EB%B8%8C%EC%BF%BC%EB%A6%AC.html">&lt;h1 id=&quot;sub-query에-관하여&quot;&gt;&lt;a href=&quot;https://iu-corner.tistory.com/entry/Oracle-Sub-Query-서브-쿼리&quot;&gt;(Sub Query)에 관하여&lt;/a&gt;&lt;/h1&gt;</content><author><name></name></author><category term="Database" /><summary type="html">(Sub Query)에 관하여</summary></entry><entry><title type="html">오라클Oracle - SQL : JOIN</title><link href="/database/2021/01/07/oracle-join.html" rel="alternate" type="text/html" title="오라클Oracle - SQL : JOIN" /><published>2021-01-07T11:30:00+09:00</published><updated>2021-01-07T11:30:00+09:00</updated><id>/database/2021/01/07/oracle-join</id><content type="html" xml:base="/database/2021/01/07/oracle-join.html">&lt;h1 id=&quot;oracle-sql--join&quot;&gt;Oracle SQL : JOIN&lt;/h1&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
oracle-lecture0107.sql

-- 사원번호, 사원이름, 부서이름
-- Equi join : 서로 다른 테이블에 자료를 외래키로 연결된 것으로 이용하여 검색할 때
select empno, ename, dname from emp, dept where emp.deptno = dept.deptno;
 
8     -- test data eng sql import , 2021-01-07
9     
10    
11    
12    select * FROM student;
13    SELECT
14        *
15    FROM professor;
16    
17    -- 학생이름과 담당 지도교수 명 출력
18    select s.name 학생이름, p.name 지도교수이름
19    from student s, department d, professor p
20    where s.deptno1 = d.deptno
21    and s.profno = p.profno;
22    
23    -- ANSI Join 
24    select s.name as &quot;학생이름&quot;, p.name as &quot;지도교수이름&quot;
25    from student s join professor p on s.profno = p.profno;
26   
27   -- 학생이름과 학과 담당 지도교수 명 출력
28   -- 학생 테이블과 학과 테이블, 교수 테이블을 join 하여 학생명,학과명, 교수명 출력
29   --Oracle inner join
30   SELECT s.name, d.dname, p.name from student s, professor p, department d
31       where s.deptno1 = d.deptno and s.profno = p.profno;
32   -- Ansi Join
33    select s.name 학생이름, d.dname 학과, p.name 지도교수
34    from student s 
35    JOIN department d ON s.deptno1 = d.deptno
36     JOIN professor p ON s.profno = p.profno;
37    
38    -- student 전공이 101번인 학생들의 학생이름과 지도교수 이름을 출력
39   
40   -- oracle join 구문
41   select s.name 학생명, p.name 교수명
42   from student s, PROFESSOR p
43   where s.profno = p.PROFNO --조인조건
44   and s.deptno1 = 101; -- 검색조건
45   
46   -- Ansi Join 구문
47   select s.name 학생명, p.name 교수명
48   from student s JOIN PROFESSOR p
49   on ( s.profno = p.PROFNO )
50   and s.DEPTNO1 = 101;
51   
52   select * from student where deptno1=101; -- 101번이 몇명인지 확인해보기
53   
54   -- Non Equi Join
55   select * from CUSTOMER;
56   select * from gift;
57   
58   -- customer 테이블과 gift 테이블을 join 하여 고객의 마일리지 포인트별로 받을 수 있는 상품 조회
59   select c.gname 고객명, to_char(c.point, '999,999') 포인트, g.gname 상품명
60   from CUSTOMER c, gift g
61   where c.POINT between g.g_start and g.g_end;
62   
63   --Ansi 구문
64   select c.gname 고객명, to_char(c.point, '999,999') 포인트, g.gname 상품명
65   from CUSTOMER c join GIFT G on c.POINT between g.G_START and g.G_END;
66   
67   --student 테이블과 score 테이블, hakjum테이블 조회하여 학생들의 이름과 점수 , 학점 출력
68   select * from STUDENT;
69   select * from score;
70   select * from hakjum;
71   
72   -- inner join 중에서
73   -- Non Equi Join
74   select s.name 학생명, sc.total 점수, h.grade 학점
75   
76   from student s, score sc,HAKJUM h
77   where s.STUDNO = sc.studno
78   and sc.total between h.MIN_POINT and h.MAX_POINT;
79   
80   -- ANSI 구문
81   select s.name 학생명, sc.total 점수, h.grade 학점
82   from student s JOIN score sc on s.STUDNO = sc.STUDNO
83                   JOIN hakjum h on sc.total between h.min_point and h.max_point;
84   
85   
86   -- student 테이블과 Professor 테이블을 Join하여 학생이름과 지도교수 이름을 출력
87   -- Oracle join 구문
88   select s.name 학생이름, p.name 지도교수
89   from student s, professor p
90   where s.profno = p.profno(+); -- 지도교수가 없는쪽에 +표시
91   
92   -- ANSI join 구문
93   select s.name 학생이름, p.name 지도교수
94   from student s LEFT OUTER JOIN professor p
95   on s.profno = p.profno; -- =기준으로 데이터가 있는 쪽에 방향에 따라 LEFT OUTER JOIN / RIGHT OUTER JOIN이 됨
96   
97   select s.name 학생이름, p.name 지도교수
98   from student s, professor p
99   where s.profno(+) = p.profno;
100  -- 데이터가 없는 학생쪽에 +표시
101  
102  select s.name 학생이름, p.name 지도교수
103  from student s RIGHT OUTER JOIN professor p -- =을 기준으로 데이터가 있는 오른쪽 방향으로 아우터 조인
104  on s.profno = p.profno;-- (+) 방향의 반대 데이터
105  
106  
107  -- student 테이블과 professor 테이블을 join하여 학생이름과 지도교수 이름을 출력
108  -- 단, 지도학생이 결정 안된 명단과 지도교수가 결정되지 않은 학생 명단을 한꺼번에 출력하라.
109  -- ** Oracle Join 구문에서 where s.profno(+) = p.profno(+) 와 같이 사용할 수 없다. ERROR
110  -- Oracle Join
111  
112  select s.name 학생, p.name 교수
113  from student s, professor p
114  where s.PROFNO = p.PROFNO(+)
115  union
116  select s.name 학생, p.name 교수
117  from student s,PROFESSOR p
118  where s.profno(+) = p.PROFNO; -- 앞의 두 문제의 결과를 합쳐서 출력하는 구문
119  
120  -- ANSI Join 구문
121  select s.name 학생, p.name 교수
122  from student s FULL OUTER JOIN professor p
123  on s.profno = p.profno;
124  
125  
126  -- SELF JOIN
127  -- 원하는 데이터가 하나의 테이블에 다 들어있는 경우 사용하는 방법
128  -- 하나의 테이블을 메모리상에서 별명을 두 개로 사용하여 가상으로 2개의 테이블로 만든 후 Join 작업을 수행
129  -- 반드시 별명을 사용해야 함
130  
131  -- emp 테이블에서 사원명, 매니저명 출력
132  select e.ENAME, m.ename from emp e, emp m where e.mgr = m.EMPNO;
133  select e.ENAME, m.ename from emp e JOIN emp m on e.mgr = m.empno;
134  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><category term="Database" /><summary type="html">Oracle SQL : JOIN</summary></entry><entry><title type="html">(JSP/MySQL) JSP-MySQL 한글 깨짐현상</title><link href="/server/2021/01/06/jsp-db%ED%95%9C%EA%B8%80%EA%B9%A8%EC%A7%90.html" rel="alternate" type="text/html" title="(JSP/MySQL) JSP-MySQL 한글 깨짐현상" /><published>2021-01-06T22:31:00+09:00</published><updated>2021-01-06T22:31:00+09:00</updated><id>/server/2021/01/06/jsp-db%ED%95%9C%EA%B8%80%EA%B9%A8%EC%A7%90</id><content type="html" xml:base="/server/2021/01/06/jsp-db%ED%95%9C%EA%B8%80%EA%B9%A8%EC%A7%90.html">&lt;h1 id=&quot;jspmysql-jsp-mysql-한글-깨짐현상&quot;&gt;(JSP/MySQL) JSP-MySQL 한글 깨짐현상&lt;/h1&gt;

&lt;p&gt;각각의 jsp 상단에는&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;%@ page pageEncoding=&quot;UTF-8&quot; contentType=&quot;text/html; charset=UTF-8&quot; %&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;로 선언하여 utf-8을 설정하였고, mysql database 역시 utf8로 설정하였다.&lt;/p&gt;

&lt;p&gt;그런데… 그런데 한글이 자꾸 깨진다. 그래서 처음 확인했던 것은  join.jsp 까지 데이터가 정상적으로 오는지 확인하였다.&lt;/p&gt;

&lt;p&gt;확인 결과 깨진다. 즉, post 전달 되는 도중에 에러가 발생한 것이다.
그래서 구글링 검색 후 다음과 같은 코드를 jsp 가장 상단에 추가하였다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;%&lt;/span&gt; 
&lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setCharacterEncoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;utf-8&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;%&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;그 후에 정상적으로 동작을 확인했다. 하지만… mysql 내부에서는 여전히 깨졌다. 물론 깨지는 형태는 변했다. 알아 볼 수 없는 문자열에서 “?????”로 변한것이다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;참고로 DB 커넥션 연결 URL 부분에서&lt;/li&gt;
  &lt;li&gt;jsp에서 mysql 접속 할 때 인코딩이 깨진다면 다음과 같이 셋팅 되어야 한다.&lt;/li&gt;
  &lt;li&gt;timezone,&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;URL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;jdbc:mysql://localhost:3306/[database_name]?characterEncoding=UTF-8&amp;amp;&quot;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;serverTimezone=UTC&amp;amp;useSSL=false&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;성공이다.&lt;/p&gt;</content><author><name></name></author><category term="Server" /><summary type="html">(JSP/MySQL) JSP-MySQL 한글 깨짐현상</summary></entry><entry><title type="html">(Windows 10 os) tomcat server 오류 발생시</title><link href="/server/2021/01/06/windows-server.html" rel="alternate" type="text/html" title="(Windows 10 os) tomcat server 오류 발생시" /><published>2021-01-06T10:21:00+09:00</published><updated>2021-01-06T10:21:00+09:00</updated><id>/server/2021/01/06/windows-server</id><content type="html" xml:base="/server/2021/01/06/windows-server.html">&lt;h1 id=&quot;이클립스-tomcat-server-실행시-오류-발생&quot;&gt;이클립스 tomcat server 실행시 오류 발생&lt;/h1&gt;

&lt;h4 id=&quot;오류-내용&quot;&gt;&lt;span style=&quot;color: red&quot;&gt;&lt;strong&gt;오류 내용&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Starting&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Tomcat&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v9&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Server&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;localhost&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;has&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;encountered&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;problem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
  
  &lt;span class=&quot;nc&quot;&gt;Server&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8005&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;required&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tomcat&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v9&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Server&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;localhost&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;are&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;already&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;....&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;~~~&lt;/span&gt;
  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위와 같은 내용으로 볼 때 이미 포트를 사용중이므로 겹쳐서 실행할 수 없다는 뜻의 내용으로 에러 로그를 출력해준다.&lt;/p&gt;

&lt;h4 id=&quot;cmd를-관리자-권한으로-열기&quot;&gt;CMD를 관리자 권한으로 열기&lt;/h4&gt;

&lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;netstat -a -n -o -p tcp
명령어 실행
&lt;span class=&quot;p&quot;&gt;
0.&lt;/span&gt;0.0.0:80 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;TCP 0.0.0.0 중에서 오류에서 발생하는 8005, 80, 8009, 8080 의 포트를 찾아 프로세스를 종료해주어야 한다.&lt;/p&gt;

&lt;p&gt;포트를 찾았다면 PID 의 번호를 입력하여 아래와 같이 명령어를 수행한다.&lt;/p&gt;

&lt;div class=&quot;language-tex highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;taskkill /f /pid 6340 (6340 부분이 PID 번호가 되겠다.)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><category term="Server" /><summary type="html">이클립스 tomcat server 실행시 오류 발생</summary></entry><entry><title type="html">(mac os)hosts 파일 수정하기</title><link href="/server/2021/01/05/mac-hosts-%ED%8C%8C%EC%9D%BC%EC%88%98%EC%A0%95.html" rel="alternate" type="text/html" title="(mac os)hosts 파일 수정하기" /><published>2021-01-05T09:21:00+09:00</published><updated>2021-01-05T09:21:00+09:00</updated><id>/server/2021/01/05/mac-hosts-%ED%8C%8C%EC%9D%BC%EC%88%98%EC%A0%95</id><content type="html" xml:base="/server/2021/01/05/mac-hosts-%ED%8C%8C%EC%9D%BC%EC%88%98%EC%A0%95.html">&lt;p&gt;hosts 파일는 DNS보다 먼저 호스트명을 IP로 변경해주는 파일이다. 주로 개발을 하거나, 특별한 이유로 호스트명으로 통신을 해야 하는 경우에 변경하여 사용할 수 있다.&lt;/p&gt;

&lt;h2 id=&quot;터미널에서-편집기를-연다&quot;&gt;터미널에서 편집기를 연다&lt;/h2&gt;

&lt;p&gt;hosts 파일을 수정하기 위해서는 관리자 권한이 필요하기에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo&lt;/code&gt; 명령어를 꼭 써줘야 한다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo vi /etc/hosts
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;혹은&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo vi /private/etc/hosts 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;내용을-편집한다&quot;&gt;내용을 편집한다.&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  1 ##
  2 # Host Database
  3 #
  4 # localhost is used to configure the loopback interface
  5 # when the system is booting.  Do not change this entry.
  6 ##
  7 127.0.0.1   localhost
  8 255.255.255.255 broadcasthost
  9 ::1             localhost
 10 fe80::1%lo0 localhost
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;아이피 주소를 넣고 구분은 탭(tab)으로 해야 한다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;127.0.0.1    www.corner.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;dns-cache-를-갱신한다&quot;&gt;DNS cache 를 갱신한다.&lt;/h2&gt;

&lt;p&gt;이제 hosts 파일이 수정하면 재부팅하거나, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dscacheutil -flushcache&lt;/code&gt; 를 입력하면 바로 적용 하실 수 있다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ dscacheutil -flushcache
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><category term="Server" /><summary type="html">hosts 파일는 DNS보다 먼저 호스트명을 IP로 변경해주는 파일이다. 주로 개발을 하거나, 특별한 이유로 호스트명으로 통신을 해야 하는 경우에 변경하여 사용할 수 있다.</summary></entry><entry><title type="html">(mac os)Apache2와 Tomcat 연동하기</title><link href="/server/2021/01/05/mac-apache2-tomcat-%EC%97%B0%EB%8F%99.html" rel="alternate" type="text/html" title="(mac os)Apache2와 Tomcat 연동하기" /><published>2021-01-05T09:11:00+09:00</published><updated>2021-01-05T09:11:00+09:00</updated><id>/server/2021/01/05/mac-apache2-tomcat-%EC%97%B0%EB%8F%99</id><content type="html" xml:base="/server/2021/01/05/mac-apache2-tomcat-%EC%97%B0%EB%8F%99.html">&lt;h1 id=&quot;macos맥-아파치-톰캣-연동&quot;&gt;MacOS(맥) 아파치 톰캣 연동&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;환경&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;OS : Mac OS BigSur&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;톰캣 : apache-tomcat-9.0.41&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;아파치 : 2.4.46&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;mod_jk : tomcat-connectors-1.2.48&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;톰캣은 설치가 되어있다고 가정하겠습니다.&lt;/p&gt;

&lt;p&gt;다음 명령어로 아파치를 설치합니다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew install httpd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;아파치와 톰캣 연동을 위해 JK Connector를 이용하겠습니다.&lt;/p&gt;

&lt;h3 id=&quot;jk-connector-설치&quot;&gt;&lt;a href=&quot;https://joolib.tistory.com/13#JK Connector 설치&quot;&gt;JK Connector 설치&lt;/a&gt;&lt;/h3&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;https://tomcat.apache.org/download-connectors.cgi&quot;&gt;tomcat.apache.org/download-connectors.cgi&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;현재 최신 버전은 1.2.48입니다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tar -xvf tomcat-connectors-1.2.48-src.tar
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;압축을 해제하고 native 폴더로 이동합니다.&lt;/p&gt;

&lt;p&gt;설치하기 전에 apxs의 위치를 찾습니다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;find / -name apxs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;저는 다음과 같은 경로가 나왔습니다.&lt;/p&gt;

&lt;p&gt;/usr/local/bin/apxs&lt;/p&gt;

&lt;p&gt;/usr/local/Cellar/httpd/2.4.46/bin/apxs&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ll /usr/local/bin/apxs

lrwxr-xr-x  1 joo  admin    31B 10 21 10:39 /usr/local/bin/apxs -&amp;gt; ../Cellar/httpd/2.4.46/bin/apxs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;같은 링크가 걸려 있습니다. 따라서 둘 중 아무거나 사용하셔도 됩니다.&lt;/p&gt;

&lt;p&gt;다시 native 폴더로 이동하여 설치를 진행하겠습니다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./configure --with-apxs=/usr/local/bin/apxs
make
make install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;설치가 바로 되면 좋은데 다음과 같은 오류가 발생했습니다.&lt;/p&gt;

&lt;p&gt;더보기&lt;/p&gt;

&lt;p&gt;이를 해결하기 위해 native/configure 파일을 수정합니다.&lt;/p&gt;

&lt;p&gt;다음과 같이 크기를 측정하는 곳에 #include&lt;stdlib.h&gt; 헤더를 추가합니다.&lt;/stdlib.h&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;sys/types.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;		/* 추가한 부분 */
main()
{
   FILE *f=fopen(&quot;conftestval&quot;,&quot;w&quot;);
   if (!f) exit(1);
   fprintf(f, &quot;%d\n&quot;, sizeof(pid_t));                                      
   exit(0);
}

...

#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;pthread.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;		/* 추가한 부분 */
main()
{
  FILE *f=fopen(&quot;conftestval&quot;,&quot;w&quot;);
  if (!f) exit(1);
  fprintf(f, &quot;%d\n&quot;, sizeof(pthread_t));  
  exit(0);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;다시 컴파일을 진행하면 크기가 잘 인식되는 것을 확인할 수 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;checking size of char... 1
checking size of int... 4
checking size of long... 8
checking size of short... 2
checking size of long double... 16
checking size of long long... 8
checking size of longlong... 0
checking size of pid_t... 4
checking size of pthread_t... 8
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;그리고 make를 진행하면 다음 결과가 보입니다.&lt;/p&gt;

&lt;p&gt;더보기&lt;/p&gt;

&lt;p&gt;warning이므로 다음 make install을 진행합니다.&lt;/p&gt;

&lt;p&gt;모두 진행하면 native/apache-2.0 폴더에 mod_jk.so 파일이 생성됩니다.&lt;/p&gt;

&lt;p&gt;또한 /usr/local/Cellar/httpd/2.4.46/lib/httpd/modules에 자동으로 파일이 생성됩니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;파일이 없다면 mod_jk.so을 /usr/local/Cellar/httpd/2.4.46/lib/httpd/modules에 복사합니다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Mac에서 아파치 모듈 경로 /usr/libexec/apache2/&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;톰캣-설정&quot;&gt;&lt;a href=&quot;https://joolib.tistory.com/13#톰캣 설정&quot;&gt;톰캣 설정&lt;/a&gt;&lt;/h3&gt;

&lt;hr /&gt;

&lt;p&gt;톰캣의 server.xml을 수정합니다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/usr/local/apache-tomcat-9.0.37/conf/server.xml

#다음과 같이 주석을 제거합니다.

&amp;lt;!-- Define an AJP 1.3 Connector on port 8009 --&amp;gt;  
&amp;lt;Connector protocol=&quot;AJP/1.3&quot;
           port=&quot;8009&quot;
           redirectPort=&quot;8443&quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;아파치-설정&quot;&gt;&lt;a href=&quot;https://joolib.tistory.com/13#아파치 설정&quot;&gt;아파치 설정&lt;/a&gt;&lt;/h3&gt;

&lt;hr /&gt;

&lt;p&gt;아파치가 설치된 곳에 conf 폴더와 workers.properties 파일을 추가합니다.&lt;/p&gt;

&lt;p&gt;저는 /etc/apache2 폴더에 추가했습니다. 로그 파일을 위해 logs 폴더도 생성합니다.&lt;/p&gt;

&lt;p&gt;workers.properties를 다음과 같이 수정합니다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;worker.list=worker1          

worker.worker1.type=ajp13
worker.worker1.host=localhost
worker.worker1.port=8009
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;아파치-httpdconf-파일-수정&quot;&gt;&lt;a href=&quot;https://joolib.tistory.com/13#아파치 httpd.conf 파일 수정&quot;&gt;아파치 httpd.conf 파일 수정&lt;/a&gt;&lt;/h3&gt;

&lt;hr /&gt;

&lt;p&gt;/usr/local/etc/httpd/httpd.conf 파일을 수정합니다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;LoadModule jk_module lib/httpd/modules/mod_jk.so
JkWorkersFile /etc/apache2/conf/workers.properties                 
JkLogFile /etc/apache2/logs/mod_jk.log
JkShmFile /etc/apache2/logs/mod_jk.shm
JkMount /* worker1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;입력 후 다음 명령어로 구문 오류가 없는지 확인합니다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;apachectl -t
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이제 확인해보겠습니다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#톰캣 실행 # 설치된 톰캣내 bin폴더에서 실행합니다. /usr/local/apache-tomcat-9.0.37/bin
./startup.sh

#아파치 실행
sudo apachectl start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;주소창에 http://localhost를 입력하여 http://localhost:8080에서 나오던 톰캣 화면이 나오는지 확인합니다.&lt;/p&gt;

&lt;p&gt;tomcat 8.5.51 버전 이상에서는 오류가 발생합니다.&lt;/p&gt;

&lt;p&gt;오류 관련하여 다음 블로그를 참조하였습니다.&lt;/p&gt;

&lt;p&gt;https://nirsa.tistory.com/131&lt;/p&gt;

&lt;p&gt;이를 참고하여 다음과 같이 수정합니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;연결 오류 설정&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;Connector protocol=&quot;AJP/1.3&quot;
           address=&quot;0.0.0.0&quot;		/* 추가한 부분 */
           secretRequired=&quot;false&quot;	/* 추가한 부분 */
           port=&quot;8009&quot;
           redirectPort=&quot;8443&quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위와 같이 설정하여 오류를 해결하였습니다.&lt;/p&gt;

&lt;p&gt;다시 주소창에 http://localhost를 입력하면 정상적으로 동작하는 모습을 확인할 수 있습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;아파치-톰캣-연동하는-과정중-에러-발생&quot;&gt;&lt;strong&gt;아파치 톰캣 연동하는 과정중 에러 발생&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;톰캣 커넥터/native/ 에서&lt;/p&gt;

&lt;p&gt;➜ native sudo ./configure –with-apxs=/usr/local/bin/apxs&lt;/p&gt;

&lt;p&gt;명령어 수행 시&lt;/p&gt;

&lt;p&gt;configure: error: C compiler cannot create executables&lt;/p&gt;

&lt;p&gt;에러 발생&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;color:red&quot;&gt;&lt;strong&gt;* 해결&lt;/strong&gt; &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;xcode-select —install&lt;/p&gt;

&lt;p&gt;명령어 수행하여 설치 후 진행하면 됨 !&lt;/p&gt;

&lt;p&gt;———————&lt;/p&gt;

&lt;p&gt;새로운 에러를 직면하였다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;./jk_types.h:56:2:&lt;/strong&gt; &lt;strong&gt;error:&lt;/strong&gt; &lt;strong&gt;Can not determine the proper size for pid_t&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;#error Can not determine the proper size for pid_t&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;^&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;./jk_types.h:62:2:&lt;/strong&gt; &lt;strong&gt;error:&lt;/strong&gt; &lt;strong&gt;Can not determine the proper size for pthread_t&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;#error Can not determine the proper size for pthread_t&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;^&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;2 errors generated.&lt;/p&gt;

&lt;p&gt;make[1]: *** [jk_ajp12_worker.lo] Error 1&lt;/p&gt;

&lt;p&gt;make: *** [all-recursive] Error 1&lt;/p&gt;

&lt;p&gt;—&amp;gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;color:red&quot;&gt;&lt;strong&gt;* 해결&lt;/strong&gt; &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;먼저, find apr_lib.h를 찾는다.&lt;/p&gt;

&lt;p&gt;sudo find / -name “apr_lib.h”&lt;/p&gt;

&lt;p&gt;apr 경로를 아래 명령어에 적용 시킨다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;➜&lt;/strong&gt; &lt;strong&gt;native&lt;/strong&gt; sudo ./configure CFLAGS=’-arch x86_64’ APXSLDFLAGS=’-arch x86_64’ –with-apxs=/usr/local/bin/apxs \LDFLAGS=’-L/usr/local/Cellar/apr/1.7.0/libexec/include/apr-1’&lt;/p&gt;

&lt;p&gt;sudo ./configure CFLAGS=’-arch x86_64’ APXSLDFLAGS=’-arch x86_64’ LDFLAGS=’-L/usr/local/Cellar/apr/1.7.0/libexec/include/apr-1’ CFLAGS=’-I/usr/local/Cellar/apr/1.7.0/libexec/include/apr-1’ –with-apxs=/usr/local/bin/apxs&lt;/p&gt;

&lt;p&gt;configure 파일을 열어서 &lt;stdlib.h&gt; 헤더파일 추가해줘야함&lt;/stdlib.h&gt;&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;sys/types.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;		&lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/* 추가한 부분 */&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;FILE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fopen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;conftestval&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;w&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;fprintf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;%d&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pid_t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;                    
  &lt;span class=&quot;n&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;pthread.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;		&lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/* 추가한 부분 */&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;kt&quot;&gt;FILE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fopen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;conftestval&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;w&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;fprintf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;%d&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pthread_t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;  
 &lt;span class=&quot;n&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;다른-방식&quot;&gt;다른 방식&lt;/h2&gt;

&lt;h1 id=&quot;jk-connector-설치하기&quot;&gt;JK Connector 설치하기&lt;/h1&gt;

&lt;p&gt;아래의 톰캣 홈페이지에서 하거나 curl을 통해서 다운로드하셔도 됩니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://tomcat.apache.org/download-connectors.cgi&quot;&gt;링크: JK Connector 다운로드&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl &lt;span class=&quot;nt&quot;&gt;-O&lt;/span&gt; http://archive.apache.org/dist/tomcat/tomcat-connectors/jk/tomcat-connectors-1.2.41-src.tar.gz
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Bash&lt;/p&gt;

&lt;p&gt;tar 압축을 해제하고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cd 압축해제위치/native&lt;/code&gt; 명령어로 이동합니다. 그리고 다음과 같은 명령어를 실행합니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./configure &lt;span class=&quot;nt&quot;&gt;--with-apxs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/sbin/apxs 
&lt;span class=&quot;c&quot;&gt;# 또는 아래 명령어를 실행한다.&lt;/span&gt;
./configure &lt;span class=&quot;nv&quot;&gt;CFLAGS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'-arch x86_64'&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;APXSLDFLAGS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'-arch x86_64'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--with-apxs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/sbin/apxs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Bash&lt;/p&gt;

&lt;p&gt;혹시나 위 과정에서 에러가 발생했다면, 대부분 컴파일러를 못 찾아서 발생하는 경우가 많습니다. 다음과 같은 명령어를 타이핑하여 소프트 링크를 만듭니다. (OSX El Capitan 기준)&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /Applications/Xcode.app/Contents/Developer/Toolchains
&lt;span class=&quot;nb&quot;&gt;sudo ln&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; XcodeDefault.xctoolchain ./OSX10.11.xctoolchain

&lt;span class=&quot;c&quot;&gt;# 1과 2를 묶어서 타이핑하셔도 됩니다. 1번 과정의 주소를 2번 과정의 src와 dest 앞에 두면 됩니다.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 그리고 다시 위의 ./configure ~ 과정을 진행합니다.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Bash&lt;/p&gt;

&lt;p&gt;마지막으로 아래와 같이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;make&lt;/code&gt; 명령어를 실행합니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 먼저 타이핑하여 실행합니다.&lt;/span&gt;
make

&lt;span class=&quot;c&quot;&gt;# sudo 명령어는 설치되는 경로의 접근을 위함입니다. &lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;make &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Bash&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;make&lt;/code&gt; 과정에서도 apr_lib.h 오류가 나는 경우가 있습니다. 아래 방법으로 해결합시다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# apr_lib.h 경로를 확인합니다.&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;find / &lt;span class=&quot;nt&quot;&gt;-name&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;apr_lib.h&quot;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 다음 명령어를 실행합니다.&lt;/span&gt;
./configure &lt;span class=&quot;nv&quot;&gt;CFLAGS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'-arch x86_64'&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;APXSLDFLAGS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'-arch x86_64'&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;LDFLAGS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'-L/usr/include/apr-1'&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;CFLAGS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'-I/usr/include/apr-1'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--with-apxs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/sbin/apxs

&lt;span class=&quot;c&quot;&gt;# 이후 make와 sudo make install을 진행합니다.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Bash&lt;/p&gt;

&lt;p&gt;정상적으로 진행되었다면 native 디렉터리 밑 apache-2.0 디렉터리 내에 mod_jk.so가 생성됩니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;install: /usr/libexec/apache2/mod_jk.so: Operation not permitted&lt;/code&gt; 에러가 발생해도 생성됩니다&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;아파치가 설치된 경로의 modules 디렉터리 밑에 mod_jk를 넣도록 합니다.&lt;/strong&gt; modules가 없다면 생성하면 됩니다. 다른 이름으로 하는 경우 httpd.conf의 mod_jk.so 위치와 일치해야 합니다.&lt;/p&gt;

&lt;h1 id=&quot;톰캣-설정하기&quot;&gt;톰캣 설정하기&lt;/h1&gt;

&lt;p&gt;톰캣에서는 설정할 부분이 적습니다. 설치 후에 변경이 없었다면 이 과정은 진행하지 않아도 됩니다. 그래도 혹시 모르니 확인은 해봅시다. 다음 명령어를 통해 톰캣의 설정 부분으로 진입합니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 설치한 톰캣 디렉터리가 Desktop에 존재한다고 가정&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /Desktop/설치된 톰캣 디렉터리 이름/conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Bash&lt;/p&gt;

&lt;p&gt;이후 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;server.xml&lt;/code&gt;을 열어 아래 설정이 있는지 확인합니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vi server.xml

&lt;span class=&quot;c&quot;&gt;# 위 명령어를 통해 에디터를 열은 후 다음과 같은 설정 부분이 있는지 확인합니다.&lt;/span&gt;

&amp;lt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; Define an AJP 1.3 Connector on port 8009 &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&amp;lt;Connector &lt;span class=&quot;nv&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;8009&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;protocol&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;AJP/1.3&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;redirectPort&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;8443&quot;&lt;/span&gt; /&amp;gt;

&lt;span class=&quot;c&quot;&gt;# 주석은 없어도 됩니다. 포트 번호가 8009인지 확인하면 됩니다.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 아예 위 부분이 통째로 주석처리 되있다면 해제해주면 되겠지요.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Bash&lt;/p&gt;

&lt;h1 id=&quot;아파치-설정하기&quot;&gt;아파치 설정하기&lt;/h1&gt;

&lt;p&gt;이제 아파치를 설정하면 됩니다. 연동할 톰캣의 리스트를 나타낼 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;workers.properties&lt;/code&gt; 파일을 하나 만들어줍니다. 위치는 아파치가 설치된 디렉터리 하위의 conf 디렉터리 밑으로 하지요.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /etc/apache2/conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Bash&lt;/p&gt;

&lt;p&gt;여기서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vi workers.properties&lt;/code&gt; 명령어를 통해 에디터를 열고 아래와 같이 입력합니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;worker.list&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;worker1

worker.worker1.type&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ajp13
worker.worker1.host&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;localhost
worker.worker1.port&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;8009

&lt;span class=&quot;c&quot;&gt;# 만일, 2개 이상의 톰캣을 사용하는 경우 다음과 같이 작성합니다.&lt;/span&gt;

worker.list&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;worker1,worker2

worker.worker1.type&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ajp13
worker.worker1.host&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;localhost
worker.worker1.port&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;8009 &lt;span class=&quot;c&quot;&gt;# 포트번호&lt;/span&gt;
worker.worker1.lbfactor&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2 &lt;span class=&quot;c&quot;&gt;# 서버 밸런스 비율&lt;/span&gt;

worker.worker2.type&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ajp13
worker.worker2.host&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;localhost
worker.worker2.port&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;8010 &lt;span class=&quot;c&quot;&gt;# 포트번호&lt;/span&gt;
worker.worker2.lbfactor&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1 &lt;span class=&quot;c&quot;&gt;# 서버 밸런스 비율&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Bash&lt;/p&gt;

&lt;p&gt;여기서 worker의 이름은 임의로 지정한 것입니다. 바꾸셔도 됩니다. 서버 밸런스 비율을 뜻하는 lbfactor의 경우도 마찬가지입니다. 또한 port 번호의 경우도 worker끼리 중첩되지 않으면 됩니다.&lt;/p&gt;

&lt;h1 id=&quot;아파치-httpdconf-수정&quot;&gt;아파치 httpd.conf 수정&lt;/h1&gt;

&lt;p&gt;명령어 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cd /etc/apache2&lt;/code&gt;를 통해 apache가 설치된 디렉터리로 이동합니다. 디렉터리 이동 후 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vi httpd.conf&lt;/code&gt; 명령어를 통해서 httpd.conf에 mod_jk를 추가합니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 위 명령어로 에디터가 열리면 다음 문장을 추가해줍니다.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 아무것도 변경하지 않았을 때, 맥에 설치된 아파치의 기본 ServerRoot는 '/usr' 입니다.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 기존 설정을 유지한채 앞에 /etc/apache2/를 붙이는 것으로 진행합니다.&lt;/span&gt;


LoadModule jk_module /etc/apache2/modules/mod_jk.so
&lt;span class=&quot;c&quot;&gt;# mod_jk.so의 위치입니다. modules는 위의 install 과정에서의 디렉터리 이름입니다.&lt;/span&gt;

JkWorkersFile /etc/apache2/conf/workers.properties
&lt;span class=&quot;c&quot;&gt;# workers 설정 파일 위치&lt;/span&gt;

JkLogFile /etc/apache2/logs/mod_jk.log
&lt;span class=&quot;c&quot;&gt;# 로그파일 위치&lt;/span&gt;

JkShmFile /etc/apache2/logs/mod_jk.shm
&lt;span class=&quot;c&quot;&gt;# Load balancing workers will not function properly 오류 대응, httpd의 권한&lt;/span&gt;

JkMount /&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; worker1
&lt;span class=&quot;c&quot;&gt;# URL에 따른 요청 처리 설정&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Bash&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;중요하게 살펴봐야 하는 부분은 JkMount 입니다.&lt;/strong&gt; 이 부분에서 어떤 URL로 오는 경우 어떤 worker(톰캣)가 처리할지 설정할 수 있습니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/*.jsp&lt;/code&gt;도 설정할 수 있고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/*.php&lt;/code&gt;도 가능합니다. 톰캣을 여러 대 설정하였다면 workers.properties에서 설정한 worker.list의 각 worker 이름에 따라서 설정합니다.&lt;/p&gt;

&lt;h1 id=&quot;확인해보기&quot;&gt;확인해보기&lt;/h1&gt;

&lt;p&gt;설정은 모두 끝났고 이제 브라우저를 열어서 확인해보면 됩니다. Tomcat의 포트는 8080이고 Apache는 80포트입니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 톰캣 실행 : 톰캣의 bin 디렉터리에서 아래처럼 스크립트를 실행하면 됩니다.&lt;/span&gt;
./startup.sh

&lt;span class=&quot;c&quot;&gt;# 아파치 실행 : 아래 명령어를 터미널에서 실행하면 됩니다.&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apachectl start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Bash&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http://localhost&lt;/code&gt; 만을 입력했을 때, Tomcat의 Web Root의 index.jsp가 보여야 합니다. 연동 전에는 포트 번호를 붙여야 하지만, 이후에는 아래 비교된 이미지처럼 포트 번호 없이 접속이 가능해야 합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://madplay.github.io/img/post/2018-01-05-apache-tomcat-modjk-2.png&quot; alt=&quot;연동 전 후&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><category term="Server" /><summary type="html">MacOS(맥) 아파치 톰캣 연동</summary></entry><entry><title type="html">(mac os)Docker install MySQL</title><link href="/database/mysql/2021/01/03/docker-install-mysql.html" rel="alternate" type="text/html" title="(mac os)Docker install MySQL" /><published>2021-01-03T16:16:00+09:00</published><updated>2021-01-03T16:16:00+09:00</updated><id>/database/mysql/2021/01/03/docker-install-mysql</id><content type="html" xml:base="/database/mysql/2021/01/03/docker-install-mysql.html">&lt;h3 id=&quot;1-도커-이미지-다운받기&quot;&gt;1. 도커 이미지 다운받기&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker pull mariadb (or mysql)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;2-컨테이너-실행&quot;&gt;2. 컨테이너 실행&lt;/h3&gt;

&lt;p&gt;localhost의 3306포트 사용시 바로 mysql포트로 연결한다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run -d -p 3306:3306 -e MYSQL_ROOT_PASSWORD=1234 --name mariadb mariadb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;3-도커-확인&quot;&gt;3. 도커 확인&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker container ls 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;4-접속&quot;&gt;4. 접속&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker exec -i -t mariadb bash 
mysql -uroot -p1234
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;5-mycnf-수정&quot;&gt;5. my.cnf 수정&lt;/h3&gt;

&lt;p&gt;vi 편집기를 먼저 설치해야 한다. 설치후 my.cnf를 적절히 수정한다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;apt-get update
apt-get install vim 
vi /etc/mysql/my.cnf 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;5-컨테이너-재시작&quot;&gt;5. 컨테이너 재시작&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker stop 컨테이너명
docker start 컨테이너명
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;6-mycnf&quot;&gt;6. My.cnf&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[mysqld]
character-set-server=utf8
collation-server=utf8_general_ci
init_connect=SET collation_connection=utf8_general_ci
init_connect=SET NAMES utf8
[client]
default-character-set=utf8
[mysql]
default-character-set=utf8
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><category term="Database" /><category term="MySQL" /><summary type="html">1. 도커 이미지 다운받기</summary></entry><entry><title type="html">MySQL Workbench 사용</title><link href="/database/mysql/2020/12/31/db-mysql.html" rel="alternate" type="text/html" title="MySQL Workbench 사용" /><published>2020-12-31T10:24:00+09:00</published><updated>2020-12-31T10:24:00+09:00</updated><id>/database/mysql/2020/12/31/db-mysql</id><content type="html" xml:base="/database/mysql/2020/12/31/db-mysql.html">&lt;h1 id=&quot;mysql-workbench-사용하기&quot;&gt;🌐MySQL Workbench 사용하기&lt;/h1&gt;

&lt;h2 id=&quot;workbench에서-db-table-생성-시&quot;&gt;workbench에서 DB, table 생성 시&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;이미 생성을 했다면&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/Eight-Corner/eight-corner.github.io/blob/master/_posts/images/workbench1.png?raw=true&quot; alt=&quot;1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;오른쪽 수리 아이콘 클릭&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/Eight-Corner/eight-corner.github.io/blob/master/_posts/images/workbench2.png?raw=true&quot; alt=&quot;2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;위와 같이 charset/collation 설정을 해준다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/Eight-Corner/eight-corner.github.io/blob/master/_posts/images/workbench3.png?raw=true&quot; alt=&quot;3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SQL 문에서 9번,10번줄 실행 (Ctrl + Enter)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;root 권한을 허용하는 것임&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/Eight-Corner/eight-corner.github.io/blob/master/_posts/images/workbench4.png?raw=true&quot; alt=&quot;4&quot; /&gt;&lt;/p&gt;

&lt;p&gt;**마찬가지로 table 처음 생성하거나 수정에서 charset/collation을 위와 같이 설정해준다. **&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/Eight-Corner/eight-corner.github.io/blob/master/_posts/images/workbench5.png?raw=true&quot; alt=&quot;5&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;왼쪽 바에서 빈 공간에서 우클릭 후 새로고침을 진행한다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/Eight-Corner/eight-corner.github.io/blob/master/_posts/images/workbench6.png?raw=true&quot; alt=&quot;6&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;새로고침 진행 후 db와 table이 정상적으로 잘 보인다면&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;server -&amp;gt; data export  (내보내기)&lt;/p&gt;

&lt;p&gt;data import (불러오기)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/Eight-Corner/eight-corner.github.io/blob/master/_posts/images/workbench7.png?raw=true&quot; alt=&quot;7&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;export to Dump Project Folde 를 체크&lt;/strong&gt; 한 뒤 본인의 뜻대로 경로를 지정하고 &lt;strong&gt;include create scheme&lt;/strong&gt;를 체크한 뒤&lt;/p&gt;

&lt;p&gt;내보내기 실행하면 끝.&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;불러오는-법&quot;&gt;불러오는 법&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/Eight-Corner/eight-corner.github.io/blob/master/_posts/images/workbench8.png?raw=true&quot; alt=&quot;불러오기&quot; /&gt;&lt;/p&gt;

&lt;p&gt;프로젝트 폴더를 받아 Load Folder Contents를 눌러 새로고침 후&lt;/p&gt;

&lt;p&gt;아래에 뜨는 불러올 스키마(DB)를 체크하여 import&lt;/p&gt;</content><author><name></name></author><category term="Database" /><category term="MySQL" /><summary type="html">🌐MySQL Workbench 사용하기</summary></entry><entry><title type="html">프로젝트 설계</title><link href="/java/lecture/2020/12/30/%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%84%A4%EA%B3%84.html" rel="alternate" type="text/html" title="프로젝트 설계" /><published>2020-12-30T09:11:00+09:00</published><updated>2020-12-30T09:11:00+09:00</updated><id>/java/lecture/2020/12/30/%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%84%A4%EA%B3%84</id><content type="html" xml:base="/java/lecture/2020/12/30/%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%84%A4%EA%B3%84.html">&lt;h1 id=&quot;member-프로젝트-진행&quot;&gt;Member 프로젝트 진행&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;화면설계&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;데이터베이스 설계&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;화면 &amp;lt;–&amp;gt; 데이터베이스 연결&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;sql문을 자바코드&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;예외처리하기&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;</content><author><name></name></author><category term="JAVA" /><category term="Lecture" /><summary type="html">Member 프로젝트 진행</summary></entry></feed>